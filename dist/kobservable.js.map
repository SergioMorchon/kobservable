{"version":3,"file":"kobservable.js","sources":["../build/observable.js","../build/computed.js"],"sourcesContent":["const equals = (v1, v2) => Number.isNaN(v1) && Number.isNaN(v2)\n    ? true\n    : v1 === v2;\n/**\n * Creates a new observable instance.\n * @param initialValue The initial value.\n */\nexport default function observable(initialValue) {\n    let data = initialValue;\n    const subscriptions = new Set();\n    const observableContainer = function (value) {\n        if (arguments.length) {\n            if (!equals(data, value)) {\n                data = value;\n                subscriptions.forEach(subscription => subscription(data));\n            }\n            return this;\n        }\n        else {\n            return data;\n        }\n    };\n    observableContainer.subscribe = subscription => {\n        subscriptions.add(subscription);\n    };\n    observableContainer.unsubscribe = subscription => {\n        subscriptions.delete(subscription);\n    };\n    observableContainer.unsubscribeAll = () => {\n        subscriptions.clear();\n    };\n    return observableContainer;\n}\n//# sourceMappingURL=observable.js.map","const empty = {};\nexport default function computed(sources, compute) {\n    let memoizedData = empty;\n    let attached = false;\n    const subscriptions = new Set();\n    const updateData = () => {\n        memoizedData = compute(sources.map(getter => getter()));\n    };\n    const subscription = () => {\n        updateData();\n        subscriptions.forEach(subscription => subscription(memoizedData));\n    };\n    const attach = () => {\n        sources.forEach(source => source.subscribe(subscription));\n        attached = true;\n    };\n    const detach = () => {\n        sources.forEach(source => source.unsubscribe(subscription));\n        attached = false;\n    };\n    const checkSubscriptions = () => {\n        if (subscriptions.size && !attached) {\n            attach();\n        }\n        else if (!subscriptions.size && attached) {\n            detach();\n        }\n    };\n    const computedContainer = function () {\n        if (memoizedData === empty) {\n            updateData();\n        }\n        return memoizedData;\n    };\n    computedContainer.subscribe = s => {\n        subscriptions.add(s);\n        checkSubscriptions();\n    };\n    computedContainer.unsubscribe = s => {\n        subscriptions.delete(s);\n        checkSubscriptions();\n    };\n    computedContainer.unsubscribeAll = () => {\n        subscriptions.clear();\n        checkSubscriptions();\n    };\n    return computedContainer;\n}\n//# sourceMappingURL=computed.js.map"],"names":[],"mappings":";;;;;;IAAA,IAAM,SAAS,SAAT,MAAS,CAAC,EAAD,EAAK,EAAL;AAAA,IAAA,WAAY,OAAO,KAAP,CAAa,EAAb,KAAoB,OAAO,KAAP,CAAa,EAAb,CAApB,GACrB,IADqB,GAErB,OAAO,EAFE;AAAA,IAAA,CAAf;AAGA,IAAA;;;;AAIA,AAAe,IAAA,SAAS,UAAT,CAAoB,YAApB,EAAkC;AAC7C,IAAA,QAAI,OAAO,YAAX;AACA,IAAA,QAAM,gBAAgB,IAAI,GAAJ,EAAtB;AACA,IAAA,QAAM,sBAAsB,SAAtB,mBAAsB,CAAU,KAAV,EAAiB;AACzC,IAAA,YAAI,UAAU,MAAd,EAAsB;AAClB,IAAA,gBAAI,CAAC,OAAO,IAAP,EAAa,KAAb,CAAL,EAA0B;AACtB,IAAA,uBAAO,KAAP;AACA,IAAA,8BAAc,OAAd,CAAsB;AAAA,IAAA,2BAAgB,aAAa,IAAb,CAAhB;AAAA,IAAA,iBAAtB;AACH,IAAA;AACD,IAAA,mBAAO,IAAP;AACH,IAAA,SAND,MAOK;AACD,IAAA,mBAAO,IAAP;AACH,IAAA;AACJ,IAAA,KAXD;AAYA,IAAA,wBAAoB,SAApB,GAAgC,wBAAgB;AAC5C,IAAA,sBAAc,GAAd,CAAkB,YAAlB;AACH,IAAA,KAFD;AAGA,IAAA,wBAAoB,WAApB,GAAkC,wBAAgB;AAC9C,IAAA,sBAAc,MAAd,CAAqB,YAArB;AACH,IAAA,KAFD;AAGA,IAAA,wBAAoB,cAApB,GAAqC,YAAM;AACvC,IAAA,sBAAc,KAAd;AACH,IAAA,KAFD;AAGA,IAAA,WAAO,mBAAP;AACH,IAAA,CACD;;ICjCA,IAAM,QAAQ,EAAd;AACA,AAAe,IAAA,SAAS,QAAT,CAAkB,OAAlB,EAA2B,OAA3B,EAAoC;AAC/C,IAAA,QAAI,eAAe,KAAnB;AACA,IAAA,QAAI,WAAW,KAAf;AACA,IAAA,QAAM,gBAAgB,IAAI,GAAJ,EAAtB;AACA,IAAA,QAAM,aAAa,SAAb,UAAa,GAAM;AACrB,IAAA,uBAAe,QAAQ,QAAQ,GAAR,CAAY;AAAA,IAAA,mBAAU,QAAV;AAAA,IAAA,SAAZ,CAAR,CAAf;AACH,IAAA,KAFD;AAGA,IAAA,QAAM,eAAe,SAAf,YAAe,GAAM;AACvB,IAAA;AACA,IAAA,sBAAc,OAAd,CAAsB;AAAA,IAAA,mBAAgB,aAAa,YAAb,CAAhB;AAAA,IAAA,SAAtB;AACH,IAAA,KAHD;AAIA,IAAA,QAAM,SAAS,SAAT,MAAS,GAAM;AACjB,IAAA,gBAAQ,OAAR,CAAgB;AAAA,IAAA,mBAAU,OAAO,SAAP,CAAiB,YAAjB,CAAV;AAAA,IAAA,SAAhB;AACA,IAAA,mBAAW,IAAX;AACH,IAAA,KAHD;AAIA,IAAA,QAAM,SAAS,SAAT,MAAS,GAAM;AACjB,IAAA,gBAAQ,OAAR,CAAgB;AAAA,IAAA,mBAAU,OAAO,WAAP,CAAmB,YAAnB,CAAV;AAAA,IAAA,SAAhB;AACA,IAAA,mBAAW,KAAX;AACH,IAAA,KAHD;AAIA,IAAA,QAAM,qBAAqB,SAArB,kBAAqB,GAAM;AAC7B,IAAA,YAAI,cAAc,IAAd,IAAsB,CAAC,QAA3B,EAAqC;AACjC,IAAA;AACH,IAAA,SAFD,MAGK,IAAI,CAAC,cAAc,IAAf,IAAuB,QAA3B,EAAqC;AACtC,IAAA;AACH,IAAA;AACJ,IAAA,KAPD;AAQA,IAAA,QAAM,oBAAoB,SAApB,iBAAoB,GAAY;AAClC,IAAA,YAAI,iBAAiB,KAArB,EAA4B;AACxB,IAAA;AACH,IAAA;AACD,IAAA,eAAO,YAAP;AACH,IAAA,KALD;AAMA,IAAA,sBAAkB,SAAlB,GAA8B,aAAK;AAC/B,IAAA,sBAAc,GAAd,CAAkB,CAAlB;AACA,IAAA;AACH,IAAA,KAHD;AAIA,IAAA,sBAAkB,WAAlB,GAAgC,aAAK;AACjC,IAAA,sBAAc,MAAd,CAAqB,CAArB;AACA,IAAA;AACH,IAAA,KAHD;AAIA,IAAA,sBAAkB,cAAlB,GAAmC,YAAM;AACrC,IAAA,sBAAc,KAAd;AACA,IAAA;AACH,IAAA,KAHD;AAIA,IAAA,WAAO,iBAAP;AACH,IAAA,CACD;;;;;;;"}